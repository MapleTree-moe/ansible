# code: language=ansible

###
### mapletree.moe - system configuration management
### containers role - setup podman on target systems
###
---
- name: CONTAINERS | Check if podman socket is required for target host
  # SECURITY: a podman socket proxy could be useful to boost security
  ansible.builtin.set_fact:
    podman_socket_required: true
  # TODO: this is just traefik for now, but it would be nice to check multiple
  #       services against `containers_services_enabled`
  when: '"traefik" in containers_services_enabled'

- name: CONTAINERS | Install packages
  ansible.builtin.package:
    name:
      - container-tools
    state: present
    update_cache: true

- name: CONTAINERS | Configure subuid and subgid for podman user
  # podman is installed after the user is created in the `common` role so we
  # need to manually set subuid and subgid
  # https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/building_running_and_managing_containers/assembly_starting-with-containers_building-running-and-managing-containers
  vars:
    subid_users: # noqa var-naming
      - podman
  ansible.builtin.include_role:
    # https://github.com/rwxd/ansible-role-subuid_subgid
    name: subuid_subgid

# using containers with SELinux requires additional policy options to be enabled
- name: CONTAINERS | Configure SELinux
  block:
    - name: CONTAINERS | SELINUX | Install SELinux policy modules
      vars:
        selinux_modules:
          # TODO: these two modules are actually udica templates. we should
          #       figure out how to use these templates directly on the host.
          - path: selinux/base_container.cil
            state: enabled
          - path: selinux/net_container.cil
            state: enabled
      ansible.builtin.include_role:
        # https://galaxy.ansible.com/ui/repo/published/fedora/linux_system_roles/docs/README_selinux/
        name: fedora.linux_system_roles.selinux
    - name: CONTAINERS | SELINUX | Flush SELinux handlers
      ansible.builtin.meta: flush_handlers

- name: CONTAINERS | Configure SystemD |
  block:
    - name: CONTAINERS | SYSTEMD | Install podman.sock if required by services
      vars:
        systemd_enabled_units:
          - item: podman.socket
            user: podman
        systemd_started_units:
          - item: podman.socket
            user: podman
      ansible.builtin.include_role:
        # https://galaxy.ansible.com/ui/repo/published/fedora/linux_system_roles/docs/README_systemd/
        name: fedora.linux_system_roles.systemd
      when: podman_socket_required
    # because systemD doesn't allow user units to interact with system units, we
    # can't use `network-online.target` for podman, so we make our own
    # https://access.redhat.com/solutions/7004860
    - name: CONTAINERS | SYSTEMD | Install user-network-online.service
      vars:
        systemd_enabled_units:
          - item: user-network-online.service
            user: podman
        systemd_started_units:
          - item: user-network-online.service
            user: podman
        systemd_unit_file_templates:
          - item: user-network-online.service.j2
            # https://access.redhat.com/solutions/7004860
            user: podman
            state: present
      ansible.builtin.include_role:
        # https://galaxy.ansible.com/ui/repo/published/fedora/linux_system_roles/docs/README_systemd/
        name: fedora.linux_system_roles.systemd
    - name: CONTAINERS | SYSTEMD | Flush systemd handlers
      ansible.builtin.meta: flush_handlers

- name: CONTAINERS | Install and configure enabled containers
  ansible.builtin.include_tasks:
    file: "{{ service_name }}.yaml"
  loop: "{{ containers_services_enabled }}"
  loop_control:
    loop_var: service_name
