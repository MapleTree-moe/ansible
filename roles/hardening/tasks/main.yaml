###
### mapletree.moe - system configuration management
### hardening role - configure system to align with compliance policy
###
---
- name: HARDENING | BENCHMARK | Run CIS server level 2 benchmark
# NOTE: this execution of the benchmark is extremely aggressive and assumes it
#       will only be ran on servers adhering to the `mapletree.moe` config style
  vars:
    rhel9cis_aide_scan: cron # FIXME: transition to using systemd timers
    rhel9cis_auditd_extra_conf:
      admin_space_left: '10%' # should never be hit, if so halt system
      space_left: '20%'  # give more time to get in to clear space
    rhel9cis_auditd_extra_conf_usage: true
    rhel9cis_auditd_space_left_action: email # notify when space is low
    rhel9cis_authselect_custom_profile_name: mapletree # must be set for role
    # yamllint disable-line rule:line-length
    rhel9cis_authselect_default_profile_to_copy: minimal --symlink-meta --symlink-pam
    rhel9cis_authselect_pkg_update: true
    # FIXME: we would ideally use "FUTURE" here, but some websites (openzfs) use
    #        ssl certificates that are too weak for this, so we fall back to
    #        "DEFAULT"
    rhel9cis_crypto_policy: DEFAULT
    rhel9cis_disruption_high: true
    rhel9cis_dotperm_ansiblemanaged: true
    rhel9cis_flush_ipv4_route: true
    rhel9cis_flush_ipv6_route: false # FIXME: ipv6
    rhel9cis_ipv6_required: false  # FIXME: implement ipv6
    rhel9cis_journald_systemkeepfree: 20G
    rhel9cis_journald_runtimekeepfree: 20G
    rhel9cis_set_boot_pass: false  # handled in `compliance_bootloader.yaml`
    rhel9cis_ssh_loglevel: VERBOSE
    rhel9cis_sshd_allowusers: "admin podman" # FIXME: move to group based allow
    rhel9cis_sshd_clientalivecountmax: 1 # ensure sshd_config passes oscap
    rhel9cis_sshd_clientaliveinterval: 300
    rhel9cis_sysctl_update: true
    rhel9cis_syslog: journald # prefer journald as its already present
    rhel9cis_rule_1_1_2_1_1: false # rules 1.1.2.x are for dedicated partitions
    rhel9cis_rule_1_1_2_1_2: false # which we don't use
    rhel9cis_rule_1_1_2_1_3: false
    rhel9cis_rule_1_1_2_1_4: false
    rhel9cis_rule_1_1_2_3_1: false
    rhel9cis_rule_1_1_2_3_2: false
    rhel9cis_rule_1_1_2_3_3: false
    rhel9cis_rule_1_1_2_4_1: false
    rhel9cis_rule_1_1_2_4_2: false
    rhel9cis_rule_1_1_2_4_3: false
    rhel9cis_rule_1_1_2_5_1: false
    rhel9cis_rule_1_1_2_5_2: false
    rhel9cis_rule_1_1_2_5_3: false
    rhel9cis_rule_1_1_2_5_4: false
    rhel9cis_rule_1_1_2_6_1: false
    rhel9cis_rule_1_1_2_6_2: false
    rhel9cis_rule_1_1_2_6_3: false
    rhel9cis_rule_1_1_2_6_4: false
    rhel9cis_rule_1_1_2_7_1: false
    rhel9cis_rule_1_1_2_7_2: false
    rhel9cis_rule_1_1_2_7_3: false
    rhel9cis_rule_1_1_2_7_4: false
    rhel9cis_rule_1_2_1_1: false # FIXME: false positive, issue #292
    rhel9cis_rule_5_2_4: false  # rule 5.2.4 breaks w/NO_PASSWD + locked psswd
    rhel9cis_rule_5_4_2_5: false  # FIXME: false positive on root_path
    rhel9cis_rule_6_2_2_1_1: false # rules 6.2.2.1.x configures offsite logging
    rhel9cis_rule_6_2_2_1_2: false # which we don't use
    rhel9cis_rule_6_2_2_1_3: false
    rhel9cis_rule_6_2_2_1_4: false
  ansible.builtin.include_role:
    name: rhel9-cis

- name: HARDENING | BOOTLOADER | Set password & harden kernel command line
  vars:
    # set hardening_bootloader_password in group_vars
    bootloader_password: "{{ hardening_bootloader_password }}"
    bootloader_settings:
      - kernel: ALL
        options:
          # enable poisoning of freed memory pages from the slub allocator
          - name: slub_debug
            value: P
          # enable poisoning of freed memory pages from the memory allocator
          - name: page_poison
            value: 1
          # disable virtual system calls
          - name: vsyscall
            value: none
  ansible.builtin.include_role:
    name: fedora.linux_system_roles.bootloader

- name: HARDENING | FIREWALLD | Ensure firewall meets baseline policy
  vars:
    firewall:
      # disable services shipped as enabled by default
      - service: cockpit
        state: disabled
        permanent: true
      - service: dhcpv6-client
        state: disabled
        permanent: true
      # explicitly prevent ssh lockout
      - service: ssh
        state: enabled
        permanent: true
    firewall_disable_conflicting_services: true
  ansible.builtin.include_role:
    name: fedora.linux_system_roles.firewall

# use defense in depth to prevent modules with CVEs from being loaded
- name: HARDENING | KERNEL | Configure kernel modules
  vars:
    compliance_kernel_blacklist:
      # uneeded filesystems
      - cachefiles
      - erofs
      - exfat
      - fscache
      - fuse
      - isofs
      - netfs
      - smb
      # nfs stuff
      - lockd
      - nfs_common
      - nfs
      - nfsd
      # cluster filesystems
      - ceph
      - dlm
      - gfs2
      # unused connection protocols
      - atm
      - can
      - firewire-core
      - bluetooth
  block:
    - name: HARDENING | KERNEL | MODULES | Assign modules to /bin/true
      # this assigns the kernel modules to /bin/true which prevents them from
      # being loaded even if the modprobe blacklist is somehow bypassed
      ansible.builtin.lineinfile:
        path: /etc/modprobe.d/CIS.conf
        regexp: "^(#)?install {{ item }}(\\s|$)"
        line: "install {{ item }} /bin/true"
        create: true
        mode: 'go-rwx'
      with_items: "{{ compliance_kernel_blacklist }}"
    - name: HARDENING | KERNEL | MODULES | Blacklist kernel modules
      # add files to modprobes blacklisted entries
      community.general.kernel_blacklist:
        name: "{{ item }}"
      with_items: "{{ compliance_kernel_blacklist }}"

- name: HARDENING | KERNEL | Configure restrictive kernel sysctl values
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_file: /etc/sysctl.d/60-kernel_sysctl.conf
    state: present
    reload: true
  with_items:
    # these values come from DISA STIG for RHEL
    - name: kernel.core_pattern
      value: "|/bin/false"
    - name: kernel.dmesg_restrict
      value: 1
    - name: kernel.kexec_load_disabled
      value: 1
    - name: kernel.perf_event_paranoid
      value: 2
    - name: kernel.unprivileged_bpf_disabled
      value: 1

- name: HARDENING | PACKAGES | Enable local package gpg key verification
  community.general.ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: localpkg_gpgcheck
    value: 1
    no_extra_spaces: true
    create: true
    mode: "0644"

- name: HARDENING | PACKAGES | Install packages needed for compliance
  ansible.builtin.package:
    name:
      - audispd-plugins
      - gnutls-utils
      - libreswan
      - nss-tools
      - policycoreutils-python-utils
      - rng-tools
      - rsyslog-gnutls
      - s-nail
      - systemd-journal-remote
    state: present

- name: HARDENING | SYSTEM | Disable unneeded systemd services and mask
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    state: stopped
    enabled: false
    force: true
    masked: true
  with_items:
    - ctrl-alt-del.target
    - debug-shell.service
    - kdump.service
    - lvm2-monitor.service
    - lvm2-lvmpolld.socket
    - nis-domainname.service
    - rngd.service
    - rsyslog.service
    - sssd.service
    - sssd-kcm.socket
    - systemd-coredump.socket
    - NetworkManager-dispatcher.service

# prevent rapidfire Ctrl-Alt-Del bursts from triggering system reboot
- name: HARDENING | SYSTEM | Disable Ctrl-Alt-Del Burst Action
  ansible.builtin.lineinfile:
    dest: /etc/systemd/system.conf
    state: present
    regexp: ^CtrlAltDelBurstAction
    line: CtrlAltDelBurstAction=none
    create: true
    mode: "0644"

- name: HARDENING | SYSTEM | Require Authentication for Single User Mode
  community.general.ini_file:
    path: /etc/systemd/system/rescue.service.d/10-oscap.conf
    section: Service
    option: ExecStart
    value: -/usr/lib/systemd/systemd-sulogin-shell rescue
    mode: "0644"

# rhel9-cis misses some critical files, so we'll add them here
- name: HARDENING | SYSTEM | Enable restrictive permissions on critical files
  ansible.builtin.file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: '0600'
  with_items:
    - "/boot/grub2/grub.cfg"
    - "/etc/at.allow"
    - "/etc/cron.allow"

- name: HARDENING | TIMESYNC | Ensure chrony matches compliance policy
  vars:
    timesync_dhcp_ntp_servers: false
    timesync_chrony_custom_settings:
      - "cmdport 0"
      - "logdir /var/log/chrony"
      - "port 0"
    timesync_ntp_provider: chrony
    timesync_ntp_servers:
      - hostname: 0.pool.ntp.org
        minpoll: 8
        maxpoll: 16
      - hostname: 1.pool.ntp.org
        minpoll: 8
        maxpoll: 16
      - hostname: 2.pool.ntp.org
        minpoll: 8
        maxpoll: 16
      - hostname: 3.pool.ntp.org
        minpoll: 8
        maxpoll: 16
  ansible.builtin.include_role:
    name: fedora.linux_system_roles.timesync

# FIXME: use a handler
- name: HARDENING | Reboot the server to apply compliance policy
  ansible.builtin.reboot:
    reboot_timeout: 600
